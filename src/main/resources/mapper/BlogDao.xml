<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.blog.dao.BlogDao">

    <resultMap id="blog" type="Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="flag" column="flag"/>
        <result property="views" column="views"/>
        <result property="updateTime" column="update_time"/>
        <result property="typeId" column="type_id"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="shareStatement" column="share_statement"/>
        <result property="published" column="published"/>
        <result property="appreciation" column="appreciation"/>
        <result property="commentabled" column="commentabled"/>
        <result property="description" column="description"/>
        <result property="recommend" column="recommend"/>
        <result property="createTime" column="create_time"/>
        <result property="userId" column="user_id"/>
        <result property="commentCount" column="comment_count"/>

        <association property="type" javaType="Type">
            <id property="id" column="type_id"/>
            <result property="name" column="typename"/>
        </association>

        <association property="user" javaType="User">
            <id property="id" column="id"/>
            <result property="nickname" column="nickname"/>
            <result property="username" column="username"/>
            <result property="email" column="email"/>
            <result property="avatar" column="avatar"/>
        </association>

    </resultMap>

    <delete id="deleteBlog">
        delete from t_blog where id = #{id}
    </delete>

    <select id="findIndexBlog" resultMap="blog">  /*主页博客展示*/
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
        t.name typename, t.id type_id,
        u.nickname, u.avatar
        from t_blog b, t_type t, t_user u
        where b.type_id = t.id and  u.id = b.user_id and b.published=1 order by b.update_time desc
    </select>

    <select id="findAllBlog" resultMap="blog">  /*后台博客展示*/
        select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published,b.user_id,
               t.id type_id, t.name typename
        from t_blog b, t_type t
        where b.type_id = t.id and b.user_id =#{user_id} order by b.update_time desc/*博客类型id=类型id*/
    </select>

    <select id="findAllUserBlog" resultMap="blog">  /*后台博客展示*/
    select b.id, b.title, b.update_time, b.recommend, b.type_id, b.published,b.user_id,
           t.id type_id, t.name typename
    from t_blog b, t_type t
    where b.type_id = t.id /*博客类型id=类型id*/
    </select>

    <select id="findByTypeId" resultMap="blog">
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
        t.name typename, t.id type_id,
        u.nickname, u.avatar
        from t_blog b, t_type t, t_user u
        where b.type_id = t.id and u.id = b.user_id and b.type_id = #{type_id} order by b.update_time desc
    </select>


    <select id="findAllRecommendBlog" resultMap="blog">
        select id, title, recommend from t_blog order by update_time desc;
    </select>

    <select id="findAllPublishedBlog" resultMap="blog">
        select id, title, published from t_blog order by update_time desc;
    </select>


    <select id="findBlogById" resultMap="blog"> /*后台展示博客*/
        select b.id, b.published, b.flag, b.title, b.content, b.type_id,
        b.first_picture, b.description, b.recommend,
         b.share_statement, b.appreciation, b.commentabled,b.update_time,b.user_id
        from t_blog b  where  b.id = #{id};
    </select>

    <select id="findDetailedBlog" resultMap="blog">  /*博客详情*/
        select b.id, b.first_picture, b.flag, b.title, b.content, b.views,
        b.update_time,b.commentabled, b.share_statement, b.appreciation,
        u.nickname, u.avatar
        from t_blog b, t_user u
        where b.user_id = u.id and  b.id = #{id}
    </select>

    <select id="findSearchBlog" resultMap="blog">
        <bind name="pattern" value="'%' + query + '%'" />
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
        t.name typename,
        u.nickname, u.avatar
        from t_blog b, t_type t, t_user u
        where b.type_id = t.id and  u.id = b.user_id and (b.title like #{pattern} or b.content like  #{pattern})
        order by b.update_time desc
    </select>


    <update id="updateBlog" parameterType="Blog" useGeneratedKeys="true" keyProperty="id">
        update t_blog set published = #{published},flag = #{flag} ,
        title = #{title}, content = #{content}, type_id = #{typeId},
        first_picture = #{firstPicture} , description = #{description} , recommend = #{recommend} ,
        share_statement = #{shareStatement}, appreciation = #{appreciation},
        commentabled = #{commentabled} ,update_time = #{updateTime} where id = #{id};
    </update>

    <!--useGeneratedKeys="true"；使用自增主键获取主键值策略
        keyProperty；指定对应的主键属性，也就是mybatis获取到主键值以后，将这个值封装给javaBean的哪个属性
    -->
    <insert id="saveBlog" parameterType="Blog" useGeneratedKeys="true" keyProperty="id">
        insert into t_blog (title, content, first_picture, flag,
        views, appreciation, share_statement, commentabled,published,
        recommend, create_time, update_time, type_id, user_id, description)
        values (#{title}, #{content}, #{firstPicture}, #{flag}, #{views}, #{appreciation},
        #{shareStatement}, #{commentabled}, #{published}, #{recommend}, #{createTime},
        #{updateTime}, #{typeId}, #{userId}, #{description});
    </insert>

    <!--查询出文章评论数量并更新-->
    <update id="findCommentCountById" parameterType="Blog">
        update t_blog b set b.comment_count = (
            select count(*) from t_comment c where c.blog_id = #{id} and b.id = #{id}
        ) WHERE b.id = #{id}
    </update>

    <select id="findGroupYearAndMonth" resultType="String">
        select DATE_FORMAT(b.update_time, '%Y-%m') from t_blog b order by b.update_time desc
    </select>

    <select id="findByYearAndMonth" resultMap="blog">
        select b.title, b.update_time, b.id, b.flag, b.published
        from t_blog b
        where DATE_FORMAT(b.update_time, '%Y-%m') = #{year} and b.published=1 order by b.update_time desc
    </select>

    <select id="searchBlogByTitle" resultMap="blog">
        select title, content, first_picture, flag,
               views, appreciation, share_statement, commentabled,published,
               recommend, create_time, update_time, type_id, user_id, description
        from t_blog where title like CONCAT('%',#{title},'%')
    </select>

    <select id="searchBlogByType" resultMap="blog">
        select title, content, first_picture, flag,
               views, appreciation, share_statement, commentabled,published,
               recommend, create_time, update_time, type_id, user_id, description
        from t_blog where type_id=#{id}
    </select>

    <select id="searchBlogByTitleAndType" resultMap="blog">
        select title, content, first_picture, flag,
               views, appreciation, share_statement, commentabled,published,
               recommend, create_time, update_time, type_id, user_id, description
        from t_blog where title like CONCAT('%',#{title},'%') and type_id=#{id}
    </select>

</mapper>